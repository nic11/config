if-shell 'test -z "$N11_CONF"' 'display-message -p "This config must be ran by the wrapper!"'

#=============================================================================
#                      MAIN CONFIGURATION
#=============================================================================

set-option -g default-shell "$N11_CONF/bin/zsh-mycfg"

# Set a longer history limit
set -g history-limit 10000

# Start window and pane numbering from 1 for easier access
set -g base-index 1
setw -g pane-base-index 1

# Reduce the delay between prefix and command
set -s escape-time 1

# Set the title of the terminal window
set -g set-titles on
set -g set-titles-string '#H:#S.#I.#P' # hostname:session.window.pane

# Enable 24-bit color support
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",*256col*:Tc"


#=============================================================================
#                      KEY BINDINGS
#=============================================================================

# Reload the config file with Prefix + r
bind r source-file "$N11_CONF/tmux/.tmux.conf" \; display "Config reloaded!"

bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# --- VIM MOVEMENT KEYS ---
# Switch panes using Alt-vim keys without prefix
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Or with prefix + vim keys
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind -r l last-window

# Resize panes with vim keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind-key -r "p" previous-window
bind-key -r "n" next-window

bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1

#bind-key m resize-pane -Z \; choose-window "join-pane -t '%%' \; resize-pane -Z"
bind-key m resize-pane -Z \; choose-window "join-pane -t '%%'"
bind-key M break-pane


#=============================================================================
#                      MOUSE SUPPORT
#=============================================================================

# Enable full mouse support
set -g mouse on


#=============================================================================
#                      VIM-LIKE COPY/PASTE & SYSTEM CLIPBOARD
#=============================================================================

# Set vi mode for copy mode
setw -g mode-keys vi

# Start selection with 'v' (visual mode) and copy with 'y' (yank)
bind v copy-mode \; send-keys -X begin-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel

# --- PLATFORM-SPECIFIC CLIPBOARD INTEGRATION ---
# This block detects your OS and sets the correct command to copy to the
# system clipboard.

# Paste from tmux buffer with 'p'
bind P paste-buffer

set-option -g set-clipboard on

# For Linux (Wayland)
# if-shell 'test -n "$WAYLAND_DISPLAY"' 'set-option -s copy-command "wl-copy"'
if-shell 'test -n "$WAYLAND_DISPLAY"' 'bind P run-shell "wl-paste -n | tmux load-buffer - && tmux paste-buffer"'

# For Linux (X11) - requires xclip
# if-shell 'test -z "$WAYLAND_DISPLAY" && command -v xclip' 'set-option -s copy-command "xclip -i -selection clipboard"'

# For MSYS2 / Git Bash on Windows
# if-shell 'uname | grep -q MINGW' 'set-option -s copy-command "tee /dev/clipboard"'
if-shell 'uname | grep -q MINGW' 'bind P run-shell "cat /dev/clipboard | tmux load-buffer - && tmux paste-buffer"'
# 
# For Termux on Android
# if-shell 'command -v termux-clipboard-set' 'set-option -s copy-command "termux-clipboard-set"'
if-shell 'command -v termux-clipboard-set' 'bind P run-shell "termux-clipboard-get | tmux load-buffer - && tmux paste-buffer"'


#=============================================================================
#                      AESTHETICS / THEME
#=============================================================================

# Status bar styling
#set -g status-position top
set -g status-bg colour235
set -g status-fg colour255
set -g status-interval 1

# Left side of status bar
set -g status-left-length 40
set -g status-left "#[fg=colour16,bg=colour252,bold] #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,nobold] #H #[fg=colour238,bg=colour235,nobold]"

# Right side of status bar
set -g status-right-length 40
set -g status-right "#[fg=colour238,bg=colour235,nobold] #[fg=colour245,bg=colour238] %Y-%m-%d #[fg=colour252,bg=colour238,nobold] #[fg=colour16,bg=colour252,bold] %H:%M "

# Window status
setw -g window-status-format " #I:#W#F "
setw -g window-status-current-format "#[fg=colour235,bg=colour39,bold]#[fg=colour255,bg=colour39,noreverse,bold] #I:#W#F #[fg=colour39,bg=colour235,nobold]"

# Pane borders
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour39

# Message styling
set -g message-style fg=white,bg=black,bold


#=============================================================================
#                      PLUGIN MANAGEMENT (TPM)
#=============================================================================

# List of plugins. TPM will find these in ~/.tmux/plugins/
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# --- PLUGIN SETTINGS ---

# Restore terminal contents and running commands
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session' # For Neovim: 'nvim'
set -g @resurrect-restore 'C-r' # Manual restore key

# Enable automatic saving and restoring
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5' # Auto-save every 5 minutes

# IMPORTANT: This line must be at the very bottom of your .tmux.conf
#run '~/.tmux/plugins/tpm/tpm'

run "$N11_CONF/tmux/tmux-continuum/continuum.tmux"
run "$N11_CONF/tmux/tmux-resurrect/resurrect.tmux"
run "$N11_CONF/tmux/tmux-sensible/sensible.tmux"

# TODO: try https://github.com/MackenzieStanger/tmux-popup
